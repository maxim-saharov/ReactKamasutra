{"version":3,"file":"static/js/998.249186b1.chunk.js","mappings":"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","sources":["webpack://my-app1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app1/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"photoBlock\":\"ProfileInfo_photoBlock__HpWgz\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__rQo20\",\"userPhoto\":\"ProfileInfo_userPhoto__wxBp2\",\"profileBlock\":\"ProfileInfo_profileBlock__7+UG8\",\"contact\":\"ProfileInfo_contact__REoC8\",\"buttonCancel\":\"ProfileInfo_buttonCancel__bWPK3\"};","//\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState( false );\r\n   let [status, setStatus] = useState( props.status );\r\n\r\n   useEffect( () => {\r\n      setStatus( props.status )\r\n   }, [props.status] )\r\n\r\n\r\n   const activateEditMode = () => {\r\n      setEditMode( true );\r\n   }\r\n\r\n   const deActivateEditMode = () => {\r\n      setEditMode( false );\r\n      props.updateStatus( status );\r\n   }\r\n\r\n   const onStatusChange = (e) => {\r\n      setStatus( e.currentTarget.value )\r\n   }\r\n\r\n   return (\r\n      <div>\r\n\r\n         {!editMode &&\r\n         <div>\r\n            <b>Status</b><span>: </span>\r\n            <span onDoubleClick={activateEditMode}>\r\n               {props.status}\r\n            </span>\r\n         </div>\r\n         }\r\n\r\n         {editMode &&\r\n         <div>\r\n            <input\r\n               autoFocus={true}\r\n               onBlur={deActivateEditMode}\r\n               onChange={onStatusChange}\r\n               value={status}\r\n            />\r\n         </div>\r\n         }\r\n\r\n      </div>\r\n   );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React from \"react\";\r\nimport {ErrorMessageWrapper} from \"../../../utils/validators/validators\";\r\nimport {ErrorMessage, Field, FieldArray, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Style from \"./ProfileInfo.module.css\";\r\nimport StyleVal from \"../../../utils/validators/ErrorMessage.module.css\";\r\n\r\nconst validationSchema = Yup.object().shape( {\r\n\r\n   fullName: Yup.string()\r\n      .min( 2, \"Must be longer than 2 characters !\" )\r\n      .max( 25, \"Must be shorter than 5 characters !\" )\r\n      .required( \"Required !\" ),\r\n\r\n   lookingForAJobDescription: Yup.string()\r\n      .min( 2, \"Must be longer than 2 characters !\" )\r\n      .max( 50, \"Must be shorter than 5 characters !\" )\r\n      .required( \"Required !\" ),\r\n\r\n   aboutMe: Yup.string()\r\n      .min( 2, \"Must be longer than 2 characters !\" )\r\n      .max( 50, \"Must be shorter than 5 characters !\" )\r\n      .required( \"Required !\" ),\r\n\r\n} );\r\n\r\nlet contactsJsx = (name) => {\r\n   return (\r\n      <div key={name} className={Style.contact}>\r\n         <div>\r\n            <b>{name}</b>:\r\n         </div>\r\n\r\n         <div>\r\n            <Field\r\n               name={`contacts.${name}`}\r\n               type={'text'}\r\n               id={name}\r\n               placeholder={name}\r\n            />\r\n         </div>\r\n      </div>);\r\n}\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n   let {profile, handleSubmit, goToViewMode} = props;\r\n\r\n   let objectFromApiCopy = JSON.parse( JSON.stringify( profile ) );\r\n\r\n   const arrayWithNames = Object.keys( profile.contacts );\r\n\r\n   arrayWithNames.forEach( (item) => {\r\n      let value = objectFromApiCopy.contacts[item];\r\n      if (value === null) {\r\n         objectFromApiCopy.contacts[item] = '';\r\n      }\r\n   } )\r\n\r\n\r\n   return (\r\n      <div>\r\n\r\n         <div>\r\n            ...\r\n         </div>\r\n\r\n         <Formik\r\n            initialValues={objectFromApiCopy}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, bagWithMethods) => {\r\n               let {setStatus, setSubmitting } = bagWithMethods;\r\n\r\n               handleSubmit( values, setStatus, setSubmitting, goToViewMode);\r\n            }}\r\n         >\r\n            {(propsF) => {\r\n\r\n               let {status, isSubmitting} = propsF;\r\n\r\n               return (\r\n                  <Form>\r\n\r\n                     <div>\r\n                        <Field\r\n                           name={'fullName'}\r\n                           type={'text'}\r\n                           placeholder={'Full name'}\r\n                        />\r\n                     </div>\r\n                     <ErrorMessage name=\"fullName\">\r\n                        {ErrorMessageWrapper}\r\n                     </ErrorMessage>\r\n\r\n                     <div>\r\n                        < br />\r\n                     </div>\r\n\r\n                     <div>\r\n                        <Field\r\n                           name={'lookingForAJob'}\r\n                           type={'checkbox'}\r\n                           id='lookingForAJob' />\r\n                        <label htmlFor={'lookingForAJob'}>\r\n                           <b> Looking for a job</b> </label>\r\n                     </div>\r\n\r\n                     <div>\r\n                        < br />\r\n                     </div>\r\n\r\n                     <div>\r\n                        <Field\r\n                           name={'lookingForAJobDescription'}\r\n                           as={'textarea'}\r\n                           placeholder={'My professional skills'}\r\n                        />\r\n                     </div>\r\n                     <ErrorMessage name=\"lookingForAJobDescription\">\r\n                        {ErrorMessageWrapper}\r\n                     </ErrorMessage>\r\n\r\n                     <div>\r\n                        < br />\r\n                     </div>\r\n\r\n                     <div>\r\n                        <Field\r\n                           name={'aboutMe'}\r\n                           as={'textarea'}\r\n                           placeholder={'About me'}\r\n                        />\r\n                     </div>\r\n                     <ErrorMessage name=\"aboutMe\">\r\n                        {ErrorMessageWrapper}\r\n                     </ErrorMessage>\r\n\r\n                     <div>\r\n                        < br />\r\n                     </div>\r\n\r\n                     <div>\r\n                        <b>Contacts</b>:\r\n                     </div>\r\n\r\n                     <FieldArray\r\n                        name=\"friends\"\r\n                        render={() => (\r\n                           <div>\r\n                              {arrayWithNames.map( name => contactsJsx( name ) )}\r\n                           </div>\r\n                        )}\r\n                     />\r\n\r\n                     <div>\r\n                        < br />\r\n                     </div>\r\n\r\n                     {status &&\r\n                     <div className={StyleVal.validationErrorMessage}>\r\n                        <b> ..{status} - with setStatus </b>\r\n                     </div>}\r\n\r\n                     <button type={'submit'}\r\n                             disabled={isSubmitting}\r\n                     >{isSubmitting ? \"Please wait...\" : \"Save\"}\r\n                     </button>\r\n\r\n                     <button onClick={goToViewMode}\r\n                             type={'button'}\r\n                             className={Style.buttonCancel}> Cancel\r\n                     </button>\r\n\r\n                  </Form>\r\n               )\r\n            }}\r\n         </Formik>\r\n\r\n\r\n         <div>\r\n            ...\r\n         </div>\r\n\r\n         <div>\r\n            < br />\r\n         </div>\r\n\r\n\r\n      </div>)\r\n}\r\n\r\nexport default ProfileDataForm;\r\n","import s from './ProfileInfo.module.css';\r\nimport React, {useState} from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState( false );\r\n\r\n   let {profile, saveProfile} = props;\r\n\r\n\r\n   if (!profile) {\r\n      return <Preloader />\r\n   }\r\n\r\n   let alt_descriptionBlock = `photo_${profile.userId}`;\r\n\r\n   const onMainPhotoSelected = (event) => {\r\n      if (event.target.files.length) {\r\n         props.savePhoto( event.target.files[0] )\r\n      }\r\n   }\r\n\r\n   const handleSubmit = (formData, setStatus,\r\n                         setSubmitting, goToViewMode) => {\r\n\r\n      saveProfile( formData, setStatus, setSubmitting, goToViewMode );\r\n\r\n   }\r\n\r\n\r\n   return (\r\n      <div>\r\n\r\n         <div className={s.photoBlock}>\r\n            <img src='https://html5css.ru/css/img_forest.jpg' alt='photo555' />\r\n         </div>\r\n\r\n         <div className={s.descriptionBlock}>\r\n\r\n            <img src={profile.photos.small !== null\r\n               ? profile.photos.small\r\n               : userPhoto}\r\n                 className={styles.userPhoto}\r\n                 alt={alt_descriptionBlock}\r\n            />\r\n\r\n            ...Avatar - {profile.fullName} - userId - {profile.userId}\r\n\r\n            <div>\r\n               {props.isOwner\r\n               &&\r\n               <input\r\n                  type={'file'}\r\n                  onChange={onMainPhotoSelected}\r\n               />}\r\n            </div>\r\n\r\n\r\n            <div className={styles.profileBlock}>\r\n\r\n               {editMode\r\n                  ? <ProfileDataForm profile={profile}\r\n                                     handleSubmit={handleSubmit}\r\n                                     goToViewMode={\r\n                                        () => setEditMode( false )} />\r\n                  : <ProfileData profile={profile}\r\n                                 isOwner={props.isOwner}\r\n                                 goToEditMode={\r\n                                    () => setEditMode( true )} />}\r\n\r\n               <ProfileStatusWithHooks\r\n                  status={props.status}\r\n                  updateStatus={props.updateStatus} />\r\n\r\n            </div>\r\n\r\n         </div>\r\n\r\n      </div>\r\n   );\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\r\n   return (\r\n      <div>\r\n\r\n         <div>\r\n            {isOwner &&\r\n            <button onClick={goToEditMode}>Edit</button>\r\n            }\r\n         </div>\r\n\r\n         <div>\r\n            <b> Full name</b>: {profile.fullName}\r\n         </div>\r\n\r\n         <div>\r\n            <b> Looking for a job</b>: {profile.lookingForAJob\r\n            ? 'yes' : 'no'}\r\n         </div>\r\n\r\n         {profile.lookingForAJob &&\r\n         <div>\r\n            <b> My professional skills</b>: {profile.lookingForAJobDescription}\r\n         </div>}\r\n\r\n         <div>\r\n            <b> About me</b>: {profile.aboutMe}\r\n         </div>\r\n\r\n         <div>\r\n            <b> Contacts</b>:\r\n            {Object.keys( profile.contacts ).map( key => {\r\n               return <Contacts\r\n                  key={key}\r\n                  contactTitle={key}\r\n                  contactValue={profile.contacts[key]} />\r\n            } )}\r\n         </div>\r\n\r\n      </div>)\r\n}\r\n\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n\r\n   return (\r\n      <div className={styles.contact}>\r\n         <b> {contactTitle}</b>: {contactValue}\r\n      </div>)\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__tpHam\",\"posts\":\"MyPosts_posts__sKDcq\",\"text_h3\":\"MyPosts_text_h3__wvADx\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__C5ylc\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n   return (\r\n\r\n      <div className={s.item}>\r\n         <img\r\n            src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4AuCaCDS8eeLRXGL0pFD9cIddYuHc8AJoSA&usqp=CAU'\r\n            alt={'Post-illustration'}\r\n         />\r\n         ... {props.value}\r\n         <div>\r\n            Like {props.likesCount}\r\n         </div>\r\n      </div>\r\n\r\n   );\r\n}\r\n\r\nexport default Post;","//\r\nimport React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {ErrorMessageWrapper} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst MyPosts = props => {\r\n\r\n   // тут reverse - для теста\r\n   let postsElement =\r\n      [...props.posts]\r\n         .reverse()\r\n         .map( p => <Post value={p.message} likesCount={p.likesCount} key={p.id} /> );\r\n\r\n   return (\r\n      <div className={s.postsBlock}>\r\n\r\n         <h3 className={s.text_h3}>\r\n            My posts:\r\n         </h3>\r\n\r\n         <AddNewPostForm\r\n            addPost={props.addPost}\r\n         />\r\n\r\n         <div className={s.posts}>\r\n            {postsElement}\r\n         </div>\r\n\r\n      </div>\r\n   );\r\n};\r\n\r\n\r\nconst AddNewPostForm = (props) => {\r\n\r\n   const validationSchema = Yup.object().shape( {\r\n\r\n      newPostText: Yup.string()\r\n         .min( 2, \"Must be longer than 2 characters !\" )\r\n         .max( 5, \"Must be shorter than 5 characters !\" )\r\n         .required( \"Required !\" )\r\n   } );\r\n\r\n   const OnAddPost = (values) => {\r\n      props.addPost( values );\r\n   }\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{\r\n            newPostText: \"\"\r\n         }}\r\n         validationSchema={validationSchema}\r\n         onSubmit={(values, {resetForm}) => {\r\n            OnAddPost( values.newPostText );\r\n            resetForm( {values: ''} );\r\n         }}\r\n      >\r\n         {() => (\r\n            <Form>\r\n               <div>\r\n                  <Field\r\n                     name={'newPostText'}\r\n                     as={'textarea'}\r\n                     placeholder={'enter text 1'}\r\n                  />\r\n               </div>\r\n\r\n               <ErrorMessage name=\"newPostText\">\r\n                  {ErrorMessageWrapper}\r\n               </ErrorMessage>\r\n\r\n               <button type={'submit'}>Add posts</button>\r\n            </Form>\r\n         )}\r\n      </Formik>\r\n   )\r\n}\r\n\r\n\r\nexport default MyPosts;\r\n\r\n\r\n// так было раньше без формика\r\n//let newPostElement = React.createRef()\r\n\r\n// let OnAddPost = () => {\r\n//    props.addPost();\r\n// }\r\n//\r\n//\r\n// let onPostChange = () => {\r\n//    let text = newPostElement.current.value;\r\n//    props.updateNewPostText( text );\r\n// }\r\n\r\n// <div>\r\n//    <textarea ref={newPostElement}\r\n//              onChange={onPostChange}\r\n//              value={props.newPostText} />\r\n// </div>\r\n//\r\n// <div>\r\n//    <button onClick={OnAddPost}> Add posts\r\n//    </button>\r\n// </div>\r\n\r\n// let postsElement =\r\n//    props.posts.map( p => <Post value={p.message} likesCount={p.likesCount} key={p.id} /> );","//\r\nimport {connect} from \"react-redux\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n   return {\r\n\r\n      addPost: (newPostText) => {\r\n         dispatch( addPostActionCreator( newPostText ) );\r\n      }\r\n   }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect( mapStateToProps, mapDispatchToProps )( MyPosts );\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n// const MyPostsContainer = () => {\r\n//\r\n//    return (\r\n//       <StoreContext_Non.Consumer>{\r\n//\r\n//          (store) => {\r\n//\r\n//             let state = store.getState();\r\n//\r\n//             let addPost = () => {\r\n//                store.dispatch( addPostActionCreator() );\r\n//             }\r\n//\r\n//             let onPostChange = (text) => {\r\n//                let action = updateNewPostTextActionCreator( text );\r\n//                store.dispatch( action );\r\n//             }\r\n//\r\n//             return (\r\n//                <MyPosts posts={state.profilePage.posts}\r\n//                         addPost={addPost}\r\n//                         updateNewPostText={onPostChange}\r\n//                         newPostText={state.profilePage.newPostText}\r\n//                />\r\n//             )\r\n//\r\n//          }\r\n//\r\n//       }\r\n//\r\n//       </StoreContext_Non.Consumer>\r\n//\r\n//    )\r\n// }\r\n\r\n","//\r\nimport React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nclass Profile extends React.Component {\r\n\r\n\r\n   render() {\r\n\r\n      return (\r\n         <div>\r\n            <ProfileInfo\r\n               {...this.props}\r\n            />\r\n            <MyPostsContainer\r\n            />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Profile;\r\n\r\n","//\r\nimport React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n   getStatus,\r\n   getUserProfile,\r\n   savePhoto,\r\n   saveProfile,\r\n   updateStatus\r\n} from \"../../redux/profile-reducer\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n   constructor(props) {\r\n      super( props );\r\n      this.state = {\r\n         isShowMyProfile: true\r\n      }\r\n   }\r\n\r\n\r\n   componentDidMount() {\r\n\r\n      let userIdFromPath = +this.props.router.params.userId;\r\n      let authorisedUserId = this.props.authorisedUserId;\r\n\r\n      if (userIdFromPath) {\r\n         //userId = 2;\r\n         //userId = 23275;\r\n         this.props.getUserProfile( userIdFromPath );\r\n         this.props.getStatus( userIdFromPath );\r\n\r\n      } else {\r\n\r\n         if (this.props.isAuth) {\r\n            this.props.getUserProfile( authorisedUserId );\r\n            this.props.getStatus( authorisedUserId );\r\n         }\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n      let userIdFromPath = +this.props.router.params.userId;\r\n      let authorisedUserId = this.props.authorisedUserId;\r\n      let isShowMyProfile = this.state.isShowMyProfile;\r\n\r\n      if (isShowMyProfile) {\r\n\r\n         if (userIdFromPath === authorisedUserId) {\r\n            this.setState( {isShowMyProfile: false} )\r\n         }\r\n\r\n         if (!userIdFromPath && this.props.isAuth) {\r\n            this.props.getUserProfile( authorisedUserId );\r\n            this.props.getStatus( authorisedUserId );\r\n            this.setState( {isShowMyProfile: false} )\r\n         }\r\n      }\r\n   }\r\n\r\n\r\n   render() {\r\n\r\n      if (!this.props.isAuth && !this.props.router.params.userId) {\r\n         return <Navigate to={'/login'} />\r\n      }\r\n\r\n      let userIdFromPath = +this.props.router.params.userId;\r\n      let authorisedUserId = this.props.authorisedUserId;\r\n\r\n\r\n      let isOwner = false;\r\n      if (!userIdFromPath && this.props.isAuth) {\r\n         isOwner = true;\r\n      } else if (userIdFromPath === authorisedUserId) {\r\n         isOwner = true;\r\n      }\r\n\r\n\r\n      return (\r\n         <div>\r\n            <Profile\r\n               profile={this.props.profile}\r\n               status={this.props.status}\r\n               updateStatus={this.props.updateStatus}\r\n               isOwner={isOwner}\r\n               savePhoto={this.props.savePhoto}\r\n               saveProfile={this.props.saveProfile}\r\n            />\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\n// wrapper to use react router's v6 hooks in class component (to use HOC pattern, like in router v5)\r\nfunction withRouter(Component) {\r\n\r\n   function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n\r\n      return <Component\r\n         {...props}\r\n         router={{location, navigate, params}} />;\r\n   }\r\n\r\n   return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n\r\n   return {\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n      authorisedUserId: state.auth.id,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\n\r\n\r\nconst ProfileContainerCompose = compose(\r\n   withRouter,\r\n   connect( mapStateToProps,\r\n      {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} )\r\n)( ProfileContainer );\r\n\r\nexport default ProfileContainerCompose;\r\n\r\n\r\n//fake: state.usersPage.fake\r\n\r\n//setTimeout( () => {\r\n//this.props.getStatus( userId );\r\n//}, 2000 )\r\n\r\n// так было без compose\r\n//let AuthRedirectComponent = WithAuthRedirect( ProfileContainer );\r\n//\r\n// export default connect( mapStateToProps, {\r\n//    getUserProfile\r\n// } )( withRouter( AuthRedirectComponent ) );\r\n\r\n// так было без хок функции общей\r\n// let AuthRedirectComponent = (props) => {\r\n//\r\n//    if (!props.isAuth) {\r\n//       return <Navigate to={'/login'} />\r\n//    }\r\n//    return <ProfileContainer {...props} />\r\n// }\r\n\r\n// так было без withRouter\r\n// export default connect( mapStateToProps, {\r\n//    setUserProfile\r\n// } )( ProfileContainer );\r\n\r\n// <Profile {...this.props} - это нужно что бы то что идет сверху\r\n// не потерялось\r\n// {/*можно и не передавать оно вроде как автоматом прокидывается */}\r\n\r\n// if (!this.props.isAuth) {\r\n//    return <Navigate to={'/login'} />\r\n// }\r\n\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","validationSchema","Yup","shape","fullName","min","max","required","lookingForAJobDescription","aboutMe","profile","handleSubmit","goToViewMode","objectFromApiCopy","JSON","parse","stringify","arrayWithNames","Object","keys","contacts","forEach","item","initialValues","onSubmit","values","bagWithMethods","setSubmitting","propsF","isSubmitting","name","type","placeholder","ErrorMessageWrapper","id","htmlFor","as","render","map","className","Style","contactsJsx","StyleVal","disabled","onClick","ProfileData","isOwner","goToEditMode","lookingForAJob","key","Contacts","contactTitle","contactValue","styles","saveProfile","Preloader","alt_descriptionBlock","userId","s","src","alt","photos","small","userPhoto","event","target","files","length","savePhoto","formData","likesCount","AddNewPostForm","newPostText","resetForm","addPost","OnAddPost","postsElement","posts","reverse","p","message","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","Profile","this","React","ProfileContainer","isShowMyProfile","userIdFromPath","router","params","authorisedUserId","getUserProfile","getStatus","isAuth","prevProps","prevState","snapshot","setState","to","compose","Component","location","useLocation","navigate","useNavigate","useParams","auth"],"sourceRoot":""}